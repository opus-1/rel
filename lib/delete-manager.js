// Generated by CoffeeScript 1.10.0
var DeleteManager, DeleteStatement, Nodes, TreeManager, exports, u,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

u = require('underscore');

TreeManager = require('./tree-manager');

DeleteStatement = require('./nodes/delete-statement');

Nodes = require('./nodes/nodes');

DeleteManager = (function(superClass) {
  extend(DeleteManager, superClass);

  function DeleteManager() {
    DeleteManager.__super__.constructor.call(this);
    this.ast = new DeleteStatement();
    this.ctx = this.ast;
  }

  DeleteManager.prototype.from = function(relation) {
    this.ast.relation = relation;
    return this;
  };

  DeleteManager.prototype.wheres = function(list) {
    return this.ast.wheres = list;
  };

  return DeleteManager;

})(TreeManager);

exports = module.exports = DeleteManager;
