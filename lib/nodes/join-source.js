// Generated by CoffeeScript 1.10.0
var Binary, JoinSource, exports,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Binary = require('./binary');

JoinSource = (function(superClass) {
  extend(JoinSource, superClass);

  function JoinSource(singleSource, joinop) {
    if (joinop == null) {
      joinop = [];
    }
    JoinSource.__super__.constructor.call(this);
    this.right = [];
  }

  return JoinSource;

})(Binary);

exports = module.exports = JoinSource;
