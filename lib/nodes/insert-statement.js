// Generated by CoffeeScript 1.10.0
var InsertStatement, Node, exports, u,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

u = require('underscore');

Node = require('./node');

InsertStatement = (function(superClass) {
  extend(InsertStatement, superClass);

  function InsertStatement() {
    this.relation = null;
    this.columns = [];
    this.values = null;
  }

  InsertStatement.prototype.initializeCopy = function(other) {
    InsertStatement.__super__.initializeCopy.call(this);
    this.columns = u(this.columns).clone();
    if (this.values != null) {
      return this.values = u(this.values).clone();
    }
  };

  return InsertStatement;

})(Node);

exports = module.exports = InsertStatement;
